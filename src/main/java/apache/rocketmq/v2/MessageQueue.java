// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apache/rocketmq/v2/definition.proto

package apache.rocketmq.v2;

/**
 * Protobuf type {@code apache.rocketmq.v2.MessageQueue}
 */
public final class MessageQueue extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:apache.rocketmq.v2.MessageQueue)
    MessageQueueOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MessageQueue.newBuilder() to construct.
  private MessageQueue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MessageQueue() {
    permission_ = 0;
    acceptMessageTypes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MessageQueue();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MessageQueue(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            apache.rocketmq.v2.Resource.Builder subBuilder = null;
            if (topic_ != null) {
              subBuilder = topic_.toBuilder();
            }
            topic_ = input.readMessage(apache.rocketmq.v2.Resource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(topic_);
              topic_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            id_ = input.readInt32();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            permission_ = rawValue;
            break;
          }
          case 34: {
            apache.rocketmq.v2.Broker.Builder subBuilder = null;
            if (broker_ != null) {
              subBuilder = broker_.toBuilder();
            }
            broker_ = input.readMessage(apache.rocketmq.v2.Broker.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(broker_);
              broker_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              acceptMessageTypes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            acceptMessageTypes_.add(rawValue);
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                acceptMessageTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              acceptMessageTypes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        acceptMessageTypes_ = java.util.Collections.unmodifiableList(acceptMessageTypes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_MessageQueue_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_MessageQueue_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            apache.rocketmq.v2.MessageQueue.class, apache.rocketmq.v2.MessageQueue.Builder.class);
  }

  public static final int TOPIC_FIELD_NUMBER = 1;
  private apache.rocketmq.v2.Resource topic_;
  /**
   * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
   * @return Whether the topic field is set.
   */
  @java.lang.Override
  public boolean hasTopic() {
    return topic_ != null;
  }
  /**
   * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
   * @return The topic.
   */
  @java.lang.Override
  public apache.rocketmq.v2.Resource getTopic() {
    return topic_ == null ? apache.rocketmq.v2.Resource.getDefaultInstance() : topic_;
  }
  /**
   * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.ResourceOrBuilder getTopicOrBuilder() {
    return getTopic();
  }

  public static final int ID_FIELD_NUMBER = 2;
  private int id_;
  /**
   * <code>int32 id = 2;</code>
   * @return The id.
   */
  @java.lang.Override
  public int getId() {
    return id_;
  }

  public static final int PERMISSION_FIELD_NUMBER = 3;
  private int permission_;
  /**
   * <code>.apache.rocketmq.v2.Permission permission = 3;</code>
   * @return The enum numeric value on the wire for permission.
   */
  @java.lang.Override public int getPermissionValue() {
    return permission_;
  }
  /**
   * <code>.apache.rocketmq.v2.Permission permission = 3;</code>
   * @return The permission.
   */
  @java.lang.Override public apache.rocketmq.v2.Permission getPermission() {
    @SuppressWarnings("deprecation")
    apache.rocketmq.v2.Permission result = apache.rocketmq.v2.Permission.valueOf(permission_);
    return result == null ? apache.rocketmq.v2.Permission.UNRECOGNIZED : result;
  }

  public static final int BROKER_FIELD_NUMBER = 4;
  private apache.rocketmq.v2.Broker broker_;
  /**
   * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
   * @return Whether the broker field is set.
   */
  @java.lang.Override
  public boolean hasBroker() {
    return broker_ != null;
  }
  /**
   * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
   * @return The broker.
   */
  @java.lang.Override
  public apache.rocketmq.v2.Broker getBroker() {
    return broker_ == null ? apache.rocketmq.v2.Broker.getDefaultInstance() : broker_;
  }
  /**
   * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.BrokerOrBuilder getBrokerOrBuilder() {
    return getBroker();
  }

  public static final int ACCEPT_MESSAGE_TYPES_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Integer> acceptMessageTypes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, apache.rocketmq.v2.MessageType> acceptMessageTypes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, apache.rocketmq.v2.MessageType>() {
            public apache.rocketmq.v2.MessageType convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              apache.rocketmq.v2.MessageType result = apache.rocketmq.v2.MessageType.valueOf(from);
              return result == null ? apache.rocketmq.v2.MessageType.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
   * @return A list containing the acceptMessageTypes.
   */
  @java.lang.Override
  public java.util.List<apache.rocketmq.v2.MessageType> getAcceptMessageTypesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, apache.rocketmq.v2.MessageType>(acceptMessageTypes_, acceptMessageTypes_converter_);
  }
  /**
   * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
   * @return The count of acceptMessageTypes.
   */
  @java.lang.Override
  public int getAcceptMessageTypesCount() {
    return acceptMessageTypes_.size();
  }
  /**
   * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
   * @param index The index of the element to return.
   * @return The acceptMessageTypes at the given index.
   */
  @java.lang.Override
  public apache.rocketmq.v2.MessageType getAcceptMessageTypes(int index) {
    return acceptMessageTypes_converter_.convert(acceptMessageTypes_.get(index));
  }
  /**
   * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
   * @return A list containing the enum numeric values on the wire for acceptMessageTypes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getAcceptMessageTypesValueList() {
    return acceptMessageTypes_;
  }
  /**
   * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of acceptMessageTypes at the given index.
   */
  @java.lang.Override
  public int getAcceptMessageTypesValue(int index) {
    return acceptMessageTypes_.get(index);
  }
  private int acceptMessageTypesMemoizedSerializedSize;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (topic_ != null) {
      output.writeMessage(1, getTopic());
    }
    if (id_ != 0) {
      output.writeInt32(2, id_);
    }
    if (permission_ != apache.rocketmq.v2.Permission.PERMISSION_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, permission_);
    }
    if (broker_ != null) {
      output.writeMessage(4, getBroker());
    }
    if (getAcceptMessageTypesList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(acceptMessageTypesMemoizedSerializedSize);
    }
    for (int i = 0; i < acceptMessageTypes_.size(); i++) {
      output.writeEnumNoTag(acceptMessageTypes_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (topic_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTopic());
    }
    if (id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, id_);
    }
    if (permission_ != apache.rocketmq.v2.Permission.PERMISSION_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, permission_);
    }
    if (broker_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getBroker());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < acceptMessageTypes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(acceptMessageTypes_.get(i));
      }
      size += dataSize;
      if (!getAcceptMessageTypesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }acceptMessageTypesMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof apache.rocketmq.v2.MessageQueue)) {
      return super.equals(obj);
    }
    apache.rocketmq.v2.MessageQueue other = (apache.rocketmq.v2.MessageQueue) obj;

    if (hasTopic() != other.hasTopic()) return false;
    if (hasTopic()) {
      if (!getTopic()
          .equals(other.getTopic())) return false;
    }
    if (getId()
        != other.getId()) return false;
    if (permission_ != other.permission_) return false;
    if (hasBroker() != other.hasBroker()) return false;
    if (hasBroker()) {
      if (!getBroker()
          .equals(other.getBroker())) return false;
    }
    if (!acceptMessageTypes_.equals(other.acceptMessageTypes_)) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTopic()) {
      hash = (37 * hash) + TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getTopic().hashCode();
    }
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId();
    hash = (37 * hash) + PERMISSION_FIELD_NUMBER;
    hash = (53 * hash) + permission_;
    if (hasBroker()) {
      hash = (37 * hash) + BROKER_FIELD_NUMBER;
      hash = (53 * hash) + getBroker().hashCode();
    }
    if (getAcceptMessageTypesCount() > 0) {
      hash = (37 * hash) + ACCEPT_MESSAGE_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + acceptMessageTypes_.hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static apache.rocketmq.v2.MessageQueue parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static apache.rocketmq.v2.MessageQueue parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static apache.rocketmq.v2.MessageQueue parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static apache.rocketmq.v2.MessageQueue parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(apache.rocketmq.v2.MessageQueue prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code apache.rocketmq.v2.MessageQueue}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:apache.rocketmq.v2.MessageQueue)
      apache.rocketmq.v2.MessageQueueOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_MessageQueue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_MessageQueue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apache.rocketmq.v2.MessageQueue.class, apache.rocketmq.v2.MessageQueue.Builder.class);
    }

    // Construct using apache.rocketmq.v2.MessageQueue.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (topicBuilder_ == null) {
        topic_ = null;
      } else {
        topic_ = null;
        topicBuilder_ = null;
      }
      id_ = 0;

      permission_ = 0;

      if (brokerBuilder_ == null) {
        broker_ = null;
      } else {
        broker_ = null;
        brokerBuilder_ = null;
      }
      acceptMessageTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_MessageQueue_descriptor;
    }

    @java.lang.Override
    public apache.rocketmq.v2.MessageQueue getDefaultInstanceForType() {
      return apache.rocketmq.v2.MessageQueue.getDefaultInstance();
    }

    @java.lang.Override
    public apache.rocketmq.v2.MessageQueue build() {
      apache.rocketmq.v2.MessageQueue result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public apache.rocketmq.v2.MessageQueue buildPartial() {
      apache.rocketmq.v2.MessageQueue result = new apache.rocketmq.v2.MessageQueue(this);
      int from_bitField0_ = bitField0_;
      if (topicBuilder_ == null) {
        result.topic_ = topic_;
      } else {
        result.topic_ = topicBuilder_.build();
      }
      result.id_ = id_;
      result.permission_ = permission_;
      if (brokerBuilder_ == null) {
        result.broker_ = broker_;
      } else {
        result.broker_ = brokerBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        acceptMessageTypes_ = java.util.Collections.unmodifiableList(acceptMessageTypes_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.acceptMessageTypes_ = acceptMessageTypes_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof apache.rocketmq.v2.MessageQueue) {
        return mergeFrom((apache.rocketmq.v2.MessageQueue)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(apache.rocketmq.v2.MessageQueue other) {
      if (other == apache.rocketmq.v2.MessageQueue.getDefaultInstance()) return this;
      if (other.hasTopic()) {
        mergeTopic(other.getTopic());
      }
      if (other.getId() != 0) {
        setId(other.getId());
      }
      if (other.permission_ != 0) {
        setPermissionValue(other.getPermissionValue());
      }
      if (other.hasBroker()) {
        mergeBroker(other.getBroker());
      }
      if (!other.acceptMessageTypes_.isEmpty()) {
        if (acceptMessageTypes_.isEmpty()) {
          acceptMessageTypes_ = other.acceptMessageTypes_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureAcceptMessageTypesIsMutable();
          acceptMessageTypes_.addAll(other.acceptMessageTypes_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      apache.rocketmq.v2.MessageQueue parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (apache.rocketmq.v2.MessageQueue) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private apache.rocketmq.v2.Resource topic_;
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Resource, apache.rocketmq.v2.Resource.Builder, apache.rocketmq.v2.ResourceOrBuilder> topicBuilder_;
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     * @return Whether the topic field is set.
     */
    public boolean hasTopic() {
      return topicBuilder_ != null || topic_ != null;
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     * @return The topic.
     */
    public apache.rocketmq.v2.Resource getTopic() {
      if (topicBuilder_ == null) {
        return topic_ == null ? apache.rocketmq.v2.Resource.getDefaultInstance() : topic_;
      } else {
        return topicBuilder_.getMessage();
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     */
    public Builder setTopic(apache.rocketmq.v2.Resource value) {
      if (topicBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        topic_ = value;
        onChanged();
      } else {
        topicBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     */
    public Builder setTopic(
        apache.rocketmq.v2.Resource.Builder builderForValue) {
      if (topicBuilder_ == null) {
        topic_ = builderForValue.build();
        onChanged();
      } else {
        topicBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     */
    public Builder mergeTopic(apache.rocketmq.v2.Resource value) {
      if (topicBuilder_ == null) {
        if (topic_ != null) {
          topic_ =
            apache.rocketmq.v2.Resource.newBuilder(topic_).mergeFrom(value).buildPartial();
        } else {
          topic_ = value;
        }
        onChanged();
      } else {
        topicBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     */
    public Builder clearTopic() {
      if (topicBuilder_ == null) {
        topic_ = null;
        onChanged();
      } else {
        topic_ = null;
        topicBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     */
    public apache.rocketmq.v2.Resource.Builder getTopicBuilder() {
      
      onChanged();
      return getTopicFieldBuilder().getBuilder();
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     */
    public apache.rocketmq.v2.ResourceOrBuilder getTopicOrBuilder() {
      if (topicBuilder_ != null) {
        return topicBuilder_.getMessageOrBuilder();
      } else {
        return topic_ == null ?
            apache.rocketmq.v2.Resource.getDefaultInstance() : topic_;
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Resource topic = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Resource, apache.rocketmq.v2.Resource.Builder, apache.rocketmq.v2.ResourceOrBuilder> 
        getTopicFieldBuilder() {
      if (topicBuilder_ == null) {
        topicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.Resource, apache.rocketmq.v2.Resource.Builder, apache.rocketmq.v2.ResourceOrBuilder>(
                getTopic(),
                getParentForChildren(),
                isClean());
        topic_ = null;
      }
      return topicBuilder_;
    }

    private int id_ ;
    /**
     * <code>int32 id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }
    /**
     * <code>int32 id = 2;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(int value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = 0;
      onChanged();
      return this;
    }

    private int permission_ = 0;
    /**
     * <code>.apache.rocketmq.v2.Permission permission = 3;</code>
     * @return The enum numeric value on the wire for permission.
     */
    @java.lang.Override public int getPermissionValue() {
      return permission_;
    }
    /**
     * <code>.apache.rocketmq.v2.Permission permission = 3;</code>
     * @param value The enum numeric value on the wire for permission to set.
     * @return This builder for chaining.
     */
    public Builder setPermissionValue(int value) {
      
      permission_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Permission permission = 3;</code>
     * @return The permission.
     */
    @java.lang.Override
    public apache.rocketmq.v2.Permission getPermission() {
      @SuppressWarnings("deprecation")
      apache.rocketmq.v2.Permission result = apache.rocketmq.v2.Permission.valueOf(permission_);
      return result == null ? apache.rocketmq.v2.Permission.UNRECOGNIZED : result;
    }
    /**
     * <code>.apache.rocketmq.v2.Permission permission = 3;</code>
     * @param value The permission to set.
     * @return This builder for chaining.
     */
    public Builder setPermission(apache.rocketmq.v2.Permission value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      permission_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Permission permission = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPermission() {
      
      permission_ = 0;
      onChanged();
      return this;
    }

    private apache.rocketmq.v2.Broker broker_;
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Broker, apache.rocketmq.v2.Broker.Builder, apache.rocketmq.v2.BrokerOrBuilder> brokerBuilder_;
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     * @return Whether the broker field is set.
     */
    public boolean hasBroker() {
      return brokerBuilder_ != null || broker_ != null;
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     * @return The broker.
     */
    public apache.rocketmq.v2.Broker getBroker() {
      if (brokerBuilder_ == null) {
        return broker_ == null ? apache.rocketmq.v2.Broker.getDefaultInstance() : broker_;
      } else {
        return brokerBuilder_.getMessage();
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     */
    public Builder setBroker(apache.rocketmq.v2.Broker value) {
      if (brokerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        broker_ = value;
        onChanged();
      } else {
        brokerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     */
    public Builder setBroker(
        apache.rocketmq.v2.Broker.Builder builderForValue) {
      if (brokerBuilder_ == null) {
        broker_ = builderForValue.build();
        onChanged();
      } else {
        brokerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     */
    public Builder mergeBroker(apache.rocketmq.v2.Broker value) {
      if (brokerBuilder_ == null) {
        if (broker_ != null) {
          broker_ =
            apache.rocketmq.v2.Broker.newBuilder(broker_).mergeFrom(value).buildPartial();
        } else {
          broker_ = value;
        }
        onChanged();
      } else {
        brokerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     */
    public Builder clearBroker() {
      if (brokerBuilder_ == null) {
        broker_ = null;
        onChanged();
      } else {
        broker_ = null;
        brokerBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     */
    public apache.rocketmq.v2.Broker.Builder getBrokerBuilder() {
      
      onChanged();
      return getBrokerFieldBuilder().getBuilder();
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     */
    public apache.rocketmq.v2.BrokerOrBuilder getBrokerOrBuilder() {
      if (brokerBuilder_ != null) {
        return brokerBuilder_.getMessageOrBuilder();
      } else {
        return broker_ == null ?
            apache.rocketmq.v2.Broker.getDefaultInstance() : broker_;
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Broker broker = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Broker, apache.rocketmq.v2.Broker.Builder, apache.rocketmq.v2.BrokerOrBuilder> 
        getBrokerFieldBuilder() {
      if (brokerBuilder_ == null) {
        brokerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.Broker, apache.rocketmq.v2.Broker.Builder, apache.rocketmq.v2.BrokerOrBuilder>(
                getBroker(),
                getParentForChildren(),
                isClean());
        broker_ = null;
      }
      return brokerBuilder_;
    }

    private java.util.List<java.lang.Integer> acceptMessageTypes_ =
      java.util.Collections.emptyList();
    private void ensureAcceptMessageTypesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        acceptMessageTypes_ = new java.util.ArrayList<java.lang.Integer>(acceptMessageTypes_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @return A list containing the acceptMessageTypes.
     */
    public java.util.List<apache.rocketmq.v2.MessageType> getAcceptMessageTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, apache.rocketmq.v2.MessageType>(acceptMessageTypes_, acceptMessageTypes_converter_);
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @return The count of acceptMessageTypes.
     */
    public int getAcceptMessageTypesCount() {
      return acceptMessageTypes_.size();
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param index The index of the element to return.
     * @return The acceptMessageTypes at the given index.
     */
    public apache.rocketmq.v2.MessageType getAcceptMessageTypes(int index) {
      return acceptMessageTypes_converter_.convert(acceptMessageTypes_.get(index));
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param index The index to set the value at.
     * @param value The acceptMessageTypes to set.
     * @return This builder for chaining.
     */
    public Builder setAcceptMessageTypes(
        int index, apache.rocketmq.v2.MessageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAcceptMessageTypesIsMutable();
      acceptMessageTypes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param value The acceptMessageTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAcceptMessageTypes(apache.rocketmq.v2.MessageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAcceptMessageTypesIsMutable();
      acceptMessageTypes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param values The acceptMessageTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllAcceptMessageTypes(
        java.lang.Iterable<? extends apache.rocketmq.v2.MessageType> values) {
      ensureAcceptMessageTypesIsMutable();
      for (apache.rocketmq.v2.MessageType value : values) {
        acceptMessageTypes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearAcceptMessageTypes() {
      acceptMessageTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @return A list containing the enum numeric values on the wire for acceptMessageTypes.
     */
    public java.util.List<java.lang.Integer>
    getAcceptMessageTypesValueList() {
      return java.util.Collections.unmodifiableList(acceptMessageTypes_);
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of acceptMessageTypes at the given index.
     */
    public int getAcceptMessageTypesValue(int index) {
      return acceptMessageTypes_.get(index);
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of acceptMessageTypes at the given index.
     * @return This builder for chaining.
     */
    public Builder setAcceptMessageTypesValue(
        int index, int value) {
      ensureAcceptMessageTypesIsMutable();
      acceptMessageTypes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param value The enum numeric value on the wire for acceptMessageTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAcceptMessageTypesValue(int value) {
      ensureAcceptMessageTypesIsMutable();
      acceptMessageTypes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .apache.rocketmq.v2.MessageType accept_message_types = 5;</code>
     * @param values The enum numeric values on the wire for acceptMessageTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllAcceptMessageTypesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureAcceptMessageTypesIsMutable();
      for (int value : values) {
        acceptMessageTypes_.add(value);
      }
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:apache.rocketmq.v2.MessageQueue)
  }

  // @@protoc_insertion_point(class_scope:apache.rocketmq.v2.MessageQueue)
  private static final apache.rocketmq.v2.MessageQueue DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new apache.rocketmq.v2.MessageQueue();
  }

  public static apache.rocketmq.v2.MessageQueue getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MessageQueue>
      PARSER = new com.google.protobuf.AbstractParser<MessageQueue>() {
    @java.lang.Override
    public MessageQueue parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MessageQueue(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MessageQueue> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MessageQueue> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public apache.rocketmq.v2.MessageQueue getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

