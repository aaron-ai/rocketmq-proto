// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apache/rocketmq/v2/definition.proto

package apache.rocketmq.v2;

public interface SubscriptionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:apache.rocketmq.v2.Subscription)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.apache.rocketmq.v2.Resource group = 1;</code>
   * @return Whether the group field is set.
   */
  boolean hasGroup();
  /**
   * <code>.apache.rocketmq.v2.Resource group = 1;</code>
   * @return The group.
   */
  apache.rocketmq.v2.Resource getGroup();
  /**
   * <code>.apache.rocketmq.v2.Resource group = 1;</code>
   */
  apache.rocketmq.v2.ResourceOrBuilder getGroupOrBuilder();

  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  java.util.List<apache.rocketmq.v2.SubscriptionEntry> 
      getSubscriptionsList();
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  apache.rocketmq.v2.SubscriptionEntry getSubscriptions(int index);
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  int getSubscriptionsCount();
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  java.util.List<? extends apache.rocketmq.v2.SubscriptionEntryOrBuilder> 
      getSubscriptionsOrBuilderList();
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  apache.rocketmq.v2.SubscriptionEntryOrBuilder getSubscriptionsOrBuilder(
      int index);

  /**
   * <code>.apache.rocketmq.v2.DeadLetterPolicy dead_letter_policy = 3;</code>
   * @return Whether the deadLetterPolicy field is set.
   */
  boolean hasDeadLetterPolicy();
  /**
   * <code>.apache.rocketmq.v2.DeadLetterPolicy dead_letter_policy = 3;</code>
   * @return The deadLetterPolicy.
   */
  apache.rocketmq.v2.DeadLetterPolicy getDeadLetterPolicy();
  /**
   * <code>.apache.rocketmq.v2.DeadLetterPolicy dead_letter_policy = 3;</code>
   */
  apache.rocketmq.v2.DeadLetterPolicyOrBuilder getDeadLetterPolicyOrBuilder();

  /**
   * <code>bool fifo = 5;</code>
   * @return The fifo.
   */
  boolean getFifo();

  /**
   * <code>int32 max_receive_batch_size = 8;</code>
   * @return The maxReceiveBatchSize.
   */
  int getMaxReceiveBatchSize();

  /**
   * <pre>
   * After messages are received from servers, consumers normally split them
   * into multiple mini-batches. Each mini-batch is assigned to a dedicated
   * task, which will be submitted to thread-pool to run concurrently.
   * </pre>
   *
   * <code>int32 messages_per_task = 9;</code>
   * @return The messagesPerTask.
   */
  int getMessagesPerTask();

  /**
   * <code>.apache.rocketmq.v2.CacheLimits cache_limits = 10;</code>
   * @return Whether the cacheLimits field is set.
   */
  boolean hasCacheLimits();
  /**
   * <code>.apache.rocketmq.v2.CacheLimits cache_limits = 10;</code>
   * @return The cacheLimits.
   */
  apache.rocketmq.v2.CacheLimits getCacheLimits();
  /**
   * <code>.apache.rocketmq.v2.CacheLimits cache_limits = 10;</code>
   */
  apache.rocketmq.v2.CacheLimitsOrBuilder getCacheLimitsOrBuilder();

  /**
   * <code>int32 consume_thread_count = 11;</code>
   * @return The consumeThreadCount.
   */
  int getConsumeThreadCount();

  /**
   * <pre>
   * Up to server
   * </pre>
   *
   * <code>.google.protobuf.Duration max_invisible_duration = 12;</code>
   * @return Whether the maxInvisibleDuration field is set.
   */
  boolean hasMaxInvisibleDuration();
  /**
   * <pre>
   * Up to server
   * </pre>
   *
   * <code>.google.protobuf.Duration max_invisible_duration = 12;</code>
   * @return The maxInvisibleDuration.
   */
  com.google.protobuf.Duration getMaxInvisibleDuration();
  /**
   * <pre>
   * Up to server
   * </pre>
   *
   * <code>.google.protobuf.Duration max_invisible_duration = 12;</code>
   */
  com.google.protobuf.DurationOrBuilder getMaxInvisibleDurationOrBuilder();
}
