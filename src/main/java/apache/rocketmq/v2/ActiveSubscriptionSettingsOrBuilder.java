// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apache/rocketmq/v2/service.proto

package apache.rocketmq.v2;

public interface ActiveSubscriptionSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:apache.rocketmq.v2.ActiveSubscriptionSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.apache.rocketmq.v2.Resource group = 1;</code>
   * @return Whether the group field is set.
   */
  boolean hasGroup();
  /**
   * <code>.apache.rocketmq.v2.Resource group = 1;</code>
   * @return The group.
   */
  apache.rocketmq.v2.Resource getGroup();
  /**
   * <code>.apache.rocketmq.v2.Resource group = 1;</code>
   */
  apache.rocketmq.v2.ResourceOrBuilder getGroupOrBuilder();

  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  java.util.List<apache.rocketmq.v2.SubscriptionEntry> 
      getSubscriptionsList();
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  apache.rocketmq.v2.SubscriptionEntry getSubscriptions(int index);
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  int getSubscriptionsCount();
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  java.util.List<? extends apache.rocketmq.v2.SubscriptionEntryOrBuilder> 
      getSubscriptionsOrBuilderList();
  /**
   * <code>repeated .apache.rocketmq.v2.SubscriptionEntry subscriptions = 2;</code>
   */
  apache.rocketmq.v2.SubscriptionEntryOrBuilder getSubscriptionsOrBuilder(
      int index);

  /**
   * <pre>
   * Consume thread count is essential if `ClientType` is `PushConsumer`.
   * </pre>
   *
   * <code>optional int32 consume_thread_count = 3;</code>
   * @return Whether the consumeThreadCount field is set.
   */
  boolean hasConsumeThreadCount();
  /**
   * <pre>
   * Consume thread count is essential if `ClientType` is `PushConsumer`.
   * </pre>
   *
   * <code>optional int32 consume_thread_count = 3;</code>
   * @return The consumeThreadCount.
   */
  int getConsumeThreadCount();

  /**
   * <pre>
   * Consume max batch size is essential if `ClientType` is `PushConsumer`.
   * </pre>
   *
   * <code>optional int32 consume_max_batch_size = 4;</code>
   * @return Whether the consumeMaxBatchSize field is set.
   */
  boolean hasConsumeMaxBatchSize();
  /**
   * <pre>
   * Consume max batch size is essential if `ClientType` is `PushConsumer`.
   * </pre>
   *
   * <code>optional int32 consume_max_batch_size = 4;</code>
   * @return The consumeMaxBatchSize.
   */
  int getConsumeMaxBatchSize();

  /**
   * <pre>
   * Max cache message bytes is essential if `ClientType` is `PushConsumer`.
   * </pre>
   *
   * <code>optional int64 max_cache_message_bytes = 5;</code>
   * @return Whether the maxCacheMessageBytes field is set.
   */
  boolean hasMaxCacheMessageBytes();
  /**
   * <pre>
   * Max cache message bytes is essential if `ClientType` is `PushConsumer`.
   * </pre>
   *
   * <code>optional int64 max_cache_message_bytes = 5;</code>
   * @return The maxCacheMessageBytes.
   */
  long getMaxCacheMessageBytes();

  /**
   * <pre>
   * Await duration here is essential if `ClientType` is `SimpleConsumer`.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration simple_consumer_receive_await_duration = 6;</code>
   * @return Whether the simpleConsumerReceiveAwaitDuration field is set.
   */
  boolean hasSimpleConsumerReceiveAwaitDuration();
  /**
   * <pre>
   * Await duration here is essential if `ClientType` is `SimpleConsumer`.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration simple_consumer_receive_await_duration = 6;</code>
   * @return The simpleConsumerReceiveAwaitDuration.
   */
  com.google.protobuf.Duration getSimpleConsumerReceiveAwaitDuration();
  /**
   * <pre>
   * Await duration here is essential if `ClientType` is `SimpleConsumer`.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration simple_consumer_receive_await_duration = 6;</code>
   */
  com.google.protobuf.DurationOrBuilder getSimpleConsumerReceiveAwaitDurationOrBuilder();
}
