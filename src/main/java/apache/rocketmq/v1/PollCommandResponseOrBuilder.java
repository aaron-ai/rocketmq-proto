// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apache/rocketmq/v1/service.proto

package apache.rocketmq.v1;

public interface PollCommandResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:apache.rocketmq.v1.PollCommandResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Default command when no new command need to be delivered.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.NoopCommand noop_command = 1;</code>
   * @return Whether the noopCommand field is set.
   */
  boolean hasNoopCommand();
  /**
   * <pre>
   * Default command when no new command need to be delivered.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.NoopCommand noop_command = 1;</code>
   * @return The noopCommand.
   */
  apache.rocketmq.v1.NoopCommand getNoopCommand();
  /**
   * <pre>
   * Default command when no new command need to be delivered.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.NoopCommand noop_command = 1;</code>
   */
  apache.rocketmq.v1.NoopCommandOrBuilder getNoopCommandOrBuilder();

  /**
   * <pre>
   * Request client to print thread stack trace.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.PrintThreadStackTraceCommand print_thread_stack_trace_command = 2;</code>
   * @return Whether the printThreadStackTraceCommand field is set.
   */
  boolean hasPrintThreadStackTraceCommand();
  /**
   * <pre>
   * Request client to print thread stack trace.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.PrintThreadStackTraceCommand print_thread_stack_trace_command = 2;</code>
   * @return The printThreadStackTraceCommand.
   */
  apache.rocketmq.v1.PrintThreadStackTraceCommand getPrintThreadStackTraceCommand();
  /**
   * <pre>
   * Request client to print thread stack trace.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.PrintThreadStackTraceCommand print_thread_stack_trace_command = 2;</code>
   */
  apache.rocketmq.v1.PrintThreadStackTraceCommandOrBuilder getPrintThreadStackTraceCommandOrBuilder();

  /**
   * <pre>
   * Request client to verify the consumption of the appointed message.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.VerifyMessageConsumptionCommand verify_message_consumption_command = 3;</code>
   * @return Whether the verifyMessageConsumptionCommand field is set.
   */
  boolean hasVerifyMessageConsumptionCommand();
  /**
   * <pre>
   * Request client to verify the consumption of the appointed message.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.VerifyMessageConsumptionCommand verify_message_consumption_command = 3;</code>
   * @return The verifyMessageConsumptionCommand.
   */
  apache.rocketmq.v1.VerifyMessageConsumptionCommand getVerifyMessageConsumptionCommand();
  /**
   * <pre>
   * Request client to verify the consumption of the appointed message.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.VerifyMessageConsumptionCommand verify_message_consumption_command = 3;</code>
   */
  apache.rocketmq.v1.VerifyMessageConsumptionCommandOrBuilder getVerifyMessageConsumptionCommandOrBuilder();

  /**
   * <pre>
   * Request client to recover the orphaned transaction message.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.RecoverOrphanedTransactionCommand recover_orphaned_transaction_command = 4;</code>
   * @return Whether the recoverOrphanedTransactionCommand field is set.
   */
  boolean hasRecoverOrphanedTransactionCommand();
  /**
   * <pre>
   * Request client to recover the orphaned transaction message.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.RecoverOrphanedTransactionCommand recover_orphaned_transaction_command = 4;</code>
   * @return The recoverOrphanedTransactionCommand.
   */
  apache.rocketmq.v1.RecoverOrphanedTransactionCommand getRecoverOrphanedTransactionCommand();
  /**
   * <pre>
   * Request client to recover the orphaned transaction message.
   * </pre>
   *
   * <code>.apache.rocketmq.v1.RecoverOrphanedTransactionCommand recover_orphaned_transaction_command = 4;</code>
   */
  apache.rocketmq.v1.RecoverOrphanedTransactionCommandOrBuilder getRecoverOrphanedTransactionCommandOrBuilder();

  public apache.rocketmq.v1.PollCommandResponse.TypeCase getTypeCase();
}
